# This workflow will build, test, and deploy to GitHub Packages. 
name: Maven Package

on:
  push:
  pull_request:
  workflow_dispatch:
  
jobs:
  build-and-deploy-java-8:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      checks: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml

      - name: Build with Maven
        run: mvn --batch-mode clean verify
        working-directory: ./plugins
        
      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1

      - name: Publish to GitHub Packages Apache Maven
        run: mvn --batch-mode deploy -DskipTests -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${{ github.repository }}
        working-directory: ./plugins
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GITHUB_PACKAGES_REPO_URL: https://maven.pkg.github.com/${{ github.repository }}

  build-and-deploy-java-11:
    if: ${{ false }} # Disable
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'
          cache: maven
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml

      - name: Build with Maven
        run: mvn --batch-mode clean package
        working-directory: ./plugins/vdm-antlr

      - name: Publish to GitHub Packages Apache Maven
        run: mvn --batch-mode deploy -DskipTests -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${{ github.repository }}
        working-directory: ./plugins/vdm-antlr
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GITHUB_PACKAGES_REPO_URL: https://maven.pkg.github.com/${{ github.repository }}
          
  signal-vdm-vscode:
    runs-on: ubuntu-latest
    needs: build-and-deploy-java-8
    if: ${{ github.repository }} == "glennlaursen/VDM_Toolkit"
    
    steps:
      - name: Checking out
        uses: actions/checkout@v3
        
      - name: Getting POM artifact info
        id: get_artifact_info
        run: |
          echo "version=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
          echo "groupId=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.groupId}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
          echo "artifactId=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.artifactId}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
        working-directory: ./plugins
        
      - name: Send repository dispatch http request to VDM-VSCode
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.VDM_VSCODE_PAT }}
          repository: glennlaursen/vdm-vscode
          event-type: new-jar
          client-payload: '{ "configId": "vdm2isa", "version": "${{ steps.get_artifact_info.outputs.version }}" }'
